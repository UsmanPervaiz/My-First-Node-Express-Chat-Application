 <!-- Optional JavaScript -->
 <!-- jQuery first, then Popper.js, then Bootstrap JS -->
 <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
 <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
 <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
 <script src="/socket.io/socket.io.js"></script>
 <script src="/reload/reload.js"></script>

 <script>
 	$(function() {
 		var socket = io.connect();

 		let $userRegistrationDiv = $("#userRegistrationDiv");
 		let $userRegistrationForm = $("#userRegistrationForm");
 		let $username = $("#username");
 		let $onlineUsers = $("#users");
 		let $messageArea = $("#messageArea");
 		let $messageForm = $("#messageForm");
 		let $message = $("#message");
 		let $chat = $("#chat");

 		socket.on("username exists", function(data) {
 			$username.attr("placeholder", `${$username.val()} already taken!`)
 			$username.val("");
 		})
 		
 		socket.on("new message", function(data) {
 			if(socket.username) {
	 			let newMessage = document.createElement("p");
	 			if(socket.username === data.username) {
	 				newMessage.className = 'bg-success chat-text';
	 			} else {
	    			newMessage.className = 'bg-info text-warning chat-text';
	  			}
	 			newMessage.innerHTML = '<strong>' + data.username + '</strong>: ' + data.msg;
	 			$chat.append(newMessage);
	 			$message.focus();
 			}
 		});

 		socket.on("update usernames", function(data) {
 			//data = array of usernames passed from the server.
 			let html = "";
 			data.forEach(function(username) {
 				html += '<li class="list-group-item">'+username+'</li>';
 			})
 			$onlineUsers.html(html);
 		})

 		$messageForm.submit(function(e) {
 			e.preventDefault();
 			if($message.val()) {
 				socket.emit("send message", $message.val())			
 			}
 			$message.val("");
 		});

 		$userRegistrationForm.submit(function(e) {			
 			// let $alreadyLoggedInUsernames = $onlineUsers.children()
 			// console.log($alreadyLoggedInUsernames)			
 			// if($alreadyLoggedInUsernames.length) {
 			// 	$alreadyLoggedInUsernames.each(function(index, child) {
 			// 		if($username.val().toLowerCase() === $(child).html().toLowerCase()) {				
 			// 			$username.attr("placeholder", `${$username.val()} already taken!`)
 			// 			$username.val("");
 			// 			return
 			// 		}
 			// 	})
 			// }
 			e.preventDefault();			
 			if($username.val()) {
 				function moveUserToChat() {
 					$username.val("");
 					$userRegistrationForm.hide();
 					$messageArea.removeAttr("hidden");
 				}
 				socket.emit("new user", $username.val(), function(data, username) {
 					if(data) {
 						socket.username = username;
 						//The socket in your browser and the socket in the server won't 
 						//share the same properties if you set them.
 						//If you set data only at the client side (which is in your 
 						//browsers memory NOT on the server), you cannot access it from
 						//the server.
 						//Keeping this in mind, I added the new property "username"
 						//to socket on both the server and the client/browser. The username
 						//here is being passed from the server to the client.
 						$userRegistrationForm.hide();
 						$messageArea.removeAttr("hidden");
 					}
 				}
				);
 			}
 		});

 		$message.keydown(function(e) {
 			if(e.keyCode === 13) {
 				e.preventDefault();
 				$messageForm.trigger("submit")
 			}
 		})

 	});
 </script>